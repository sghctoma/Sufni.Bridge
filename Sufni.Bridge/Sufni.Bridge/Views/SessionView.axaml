<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Sufni.Bridge.ViewModels"
             xmlns:v="clr-namespace:Sufni.Bridge.Views"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:plots="clr-namespace:Sufni.Bridge.Views.Plots"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="600"
             x:Class="Sufni.Bridge.Views.SessionView"
             x:DataType="vm:SessionViewModel"
             Background="#15191c">

    <Design.DataContext>
        <vm:SessionViewModel />
    </Design.DataContext>
    
    <Grid RowDefinitions="59 auto * auto auto">
        
        <!-- Name -->
        <TextBox Grid.Row="0"
                 Margin="10, 10, 10, 10"
                   Text="{Binding Name}"
                   HorizontalAlignment="Stretch"
                   VerticalContentAlignment="Center"/>
        
        <!-- Tab headers -->
        <Grid Grid.Row="1" ColumnDefinitions="* * * *"
              HorizontalAlignment="Stretch">
            
            <Grid.Styles>
                <Style Selector="Button.tabheader">
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="CornerRadius" Value="0" />
                    <Setter Property="Padding" Value="0,0,0,10" />
                </Style>
                <Style Selector="Button.tabheader:pressed /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Foreground" Value="#a0a0a0" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button.tabheader:pressed /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="FontSize" Value="19" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button.tabheader:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
                <Style Selector="Button.tabheader:disabled /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="Foreground" Value="#a0a0a0" />
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="BorderBrush" Value="#0078D7" />
                    <Setter Property="Padding" Value="0,0,0,8" />
                    <Setter Property="BorderThickness" Value="0,0,0,2" />
                </Style>
            </Grid.Styles>
            
            <Button Classes="tabheader" Name="Spring" Grid.Column="0" 
                    HorizontalAlignment="Center" 
                    Content="Spring" 
                    Click="OnSpringSelected"
                    IsEnabled="False" />
            <Button Classes="tabheader" Name="Damper" Grid.Column="1"
                    HorizontalAlignment="Center" 
                    Content="Damper" 
                    Click="OnDamperSelected"/>
            <Button Classes="tabheader" Name="Balance" Grid.Column="2" 
                    HorizontalAlignment="Center" 
                    Content="Balance"
                    Click="OnBalanceSelected" />
            <Button Classes="tabheader" Name="Notes" Grid.Column="3" 
                    HorizontalAlignment="Center"
                    Content="Notes"
                    Click="OnNotesSelected"/>
        </Grid>
        
        <ScrollViewer Name="TabScrollViewer" Grid.Row="2"
                      Margin="10,10,10,10"
                      HorizontalSnapPointsType="MandatorySingle"
                      HorizontalSnapPointsAlignment="Far"
                      HorizontalScrollBarVisibility="Hidden"
                      VerticalScrollBarVisibility="Disabled"
                      PropertyChanged="TabScrollViewer_OnPropertyChanged">
            <StackPanel Orientation="Horizontal"
                        AreHorizontalSnapPointsRegular="True">
                
                <!-- Ensure that the SufniTelemetryPlotViews' Telemetry property is set -->
                <i:Interaction.Behaviors>
                    <ia:EventTriggerBehavior EventName="Loaded">
                        <InvokeCommandAction Command="{Binding LoadPsstCommand}" />
                    </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                
                <!-- Spring -->
                <ScrollViewer Width="{Binding $parent[ScrollViewer].Bounds.Width}">
                    <Grid RowDefinitions="* *">
                        <plots:TravelHistogramView Grid.Row="0"
                                                   IsVisible="{Binding TelemetryData.Front.Present}"
                                                   IsHitTestVisible="False"
                                                   SuspensionType="Front"
                                                   Telemetry="{Binding TelemetryData}" />
                        <plots:TravelHistogramView Grid.Row="1"
                                                   IsVisible="{Binding TelemetryData.Rear.Present}"
                                                   IsHitTestVisible="False"
                                                   SuspensionType="Rear"
                                                   Telemetry="{Binding TelemetryData}" />
                    </Grid>
                </ScrollViewer>
                
                <!-- Damper -->
                <ScrollViewer Width="{Binding $parent[ScrollViewer].Bounds.Width}">
                    <Grid RowDefinitions="auto auto">
                        <plots:VelocityView Grid.Row="0"
                                            IsVisible="{Binding TelemetryData.Front.Present}"
                                            IsHitTestVisible="False"
                                            SuspensionType="Front"
                                            Telemetry="{Binding TelemetryData}" />
                        <plots:VelocityView Grid.Row="1"
                                            IsVisible="{Binding TelemetryData.Rear.Present}"
                                            IsHitTestVisible="False"
                                            SuspensionType="Rear"
                                            Telemetry="{Binding TelemetryData}" />
                    </Grid>
                </ScrollViewer>
                
                <!-- Balance -->
                <ScrollViewer Width="{Binding $parent[ScrollViewer].Bounds.Width}">
                    <Grid RowDefinitions="* *">
                        <plots:BalancePlotView Grid.Row="0"
                                               IsHitTestVisible="False"
                                               BalanceType="Compression"
                                               Telemetry="{Binding TelemetryData}">
                            <plots:BalancePlotView.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="TelemetryData"
                                             Converter="{x:Static ObjectConverters.IsNotNull}" />
                                    <Binding Path="TelemetryData.Front.Present" />
                                    <Binding Path="TelemetryData.Rear.Present" />
                                </MultiBinding>
                            </plots:BalancePlotView.IsVisible>
                        </plots:BalancePlotView>
                        <plots:BalancePlotView Grid.Row="1"
                                               IsHitTestVisible="False"
                                               BalanceType="Rebound"
                                               Telemetry="{Binding TelemetryData}">
                            <plots:BalancePlotView.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="TelemetryData"
                                             Converter="{x:Static ObjectConverters.IsNotNull}" />
                                    <Binding Path="TelemetryData.Front.Present" />
                                    <Binding Path="TelemetryData.Rear.Present" />
                                </MultiBinding>
                            </plots:BalancePlotView.IsVisible>
                        </plots:BalancePlotView>
                    </Grid>
                </ScrollViewer>
                
                <!-- Notes -->
                <TextBox Width="{Binding $parent[ScrollViewer].Bounds.Width}"
                         Margin="0,10,0,0"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"
                         AcceptsReturn="True" TextWrapping="Wrap"
                         Text="{Binding Description}" />
            </StackPanel>
        </ScrollViewer>
        
        <!-- Error messages for Session instance -->
        <v:ErrorMessagesControl Grid.Row="3"
                                Margin="0,5, 0, 0"
                                ClearErrorsCommand="{Binding ClearErrorsCommand}"
                                ErrorMessages="{Binding ErrorMessages}"
                                IsVisible="{Binding ErrorMessages.Count}" />

        <!-- Back, Save, Reset and Delete buttons -->
        <v:CommonButtonLine Grid.Row="4"
                            Margin="10,10,10,10"
                            OpenMainMenuCommand="{Binding OpenMainMenuCommand}"
                            SaveCommand="{Binding SaveCommand}"
                            ResetCommand="{Binding ResetCommand}"
                            DeleteCommand="{Binding DeleteCommand}"/>
        
    </Grid>
</UserControl>