<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Sufni.Bridge.ViewModels"
             xmlns:v="clr-namespace:Sufni.Bridge.Views"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:plots="clr-namespace:Sufni.Bridge.Views.Plots"
             xmlns:progRing="clr-namespace:AvaloniaProgressRing;assembly=AvaloniaProgressRing"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="600"
             x:Class="Sufni.Bridge.Views.SessionsView"
             x:DataType="vm:MainViewModel"
             Background="#404040">

    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>

    <Grid RowDefinitions="auto * auto auto 40" ColumnDefinitions="*">

        <!-- Filter -->
        <Grid Grid.Row="0" Grid.Column="0" Margin="7,5,6,0"
              RowDefinitions="35 auto" ColumnDefinitions="*">
 
            <!-- Search box -->
            <TextBox Grid.Row="0"
                     Watermark="Search ..."
                     Text="{Binding SessionSearchText}"/>
            <Button Classes="embedded" Grid.Row="0"
                    HorizontalAlignment="Right" Margin="0,0,24,0" Width="30"
                    IsVisible="{Binding SessionSearchText, Converter={x:Static ObjectConverters.IsNotNull}}"
                    Command="{Binding ClearSearchTextCommand}"
                    CommandParameter="session">
                <Image Source="{SvgImage /Assets/fa-xmark.svg}" />
            </Button>
            
            <!-- Date picker opener button -->
            <Button Classes="embedded" Grid.Row="0"
                    HorizontalAlignment="Right"
                    Command="{Binding ToggleDateFilterCommand}">
                <Image Height="14" Source="{SvgImage /Assets/fa-filter.svg}" />
                <Button.IsEnabled>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="DateFilterFrom"
                                 Converter="{x:Static ObjectConverters.IsNull}" />
                        <Binding Path="DateFilterTo"
                                 Converter="{x:Static ObjectConverters.IsNull}" />
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
            
            <!-- Date pickers -->
            <Grid Grid.Row="1" Grid.Column="0" Margin="1,0,1,0"
                  ColumnDefinitions="* auto *" RowDefinitions="auto"
                  Background="#20262b"
                  IsVisible="{Binding DateFilterVisible}">
                
                <!-- From -->
                <CalendarDatePicker Grid.Column="0" Margin="5"
                            HorizontalAlignment="Stretch"
                            SelectedDate="{Binding DateFilterFrom}"
                            DisplayDateEnd="{Binding DateFilterTo}"/>
                <Button Classes="embedded" Grid.Column="0" HorizontalAlignment="Right"
                        Width="30" Margin="0,0,20,0"
                        IsVisible="{Binding DateFilterFrom, Converter={x:Static ObjectConverters.IsNotNull}}"
                        Command="{Binding ClearDateFilterCommand}"
                        CommandParameter="from">
                    <Image Source="{SvgImage /Assets/fa-xmark.svg}" />
                </Button>
                
                <!-- Arrow -->
                <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="â†’" />
                
                <!-- To -->
                <CalendarDatePicker Grid.Row="0" Grid.Column="2"  Margin="5"
                            HorizontalAlignment="Stretch"
                            SelectedDate="{Binding DateFilterTo}"
                            DisplayDateStart="{Binding DateFilterFrom}"/>
                <Button Classes="embedded" Grid.Column="2" HorizontalAlignment="Right"
                        Width="30" Margin="0,0,20,0"
                        IsVisible="{Binding DateFilterTo, Converter={x:Static ObjectConverters.IsNotNull}}"
                        Command="{Binding ClearDateFilterCommand}"
                        CommandParameter="to">
                    <Image Source="{SvgImage /Assets/fa-xmark.svg}" />
                </Button>
            </Grid>
        </Grid>

        <!-- List of Calibrations -->
        <ScrollViewer Grid.Row="1" Grid.Column="0" Margin="0,5,0,0">
            <ItemsRepeater Classes="main" ItemsSource="{Binding Sessions}">
                <ItemsRepeater.ItemTemplate>
                    <DataTemplate>
                        <Expander CornerRadius="5" Padding="5" HorizontalAlignment="Stretch">

                            <!-- Editable name and non-editable timestamp in header -->
                            <Expander.Header>
                                <Grid ColumnDefinitions="auto * 32" RowDefinitions="*">
                                    <TextBox Grid.Column="0" BorderBrush="Transparent"
                                             HorizontalAlignment="Stretch"
                                             Text="{Binding Name}" />
                                    <TextBlock Grid.Column="1"
                                               VerticalAlignment="Center" HorizontalAlignment="Right"
                                               Text="{Binding Timestamp}" />
                                    <Image Grid.Column="2"
                                           IsVisible="{Binding IsDirty}"
                                           Height="20"
                                           HorizontalAlignment="Right"
                                           Source="{SvgImage /Assets/fa-circle-exclamation.svg}" />
                                </Grid>
                            </Expander.Header>

                            <!-- Attach command to Expanded event -->
                            <i:Interaction.Behaviors>
                                <ia:EventTriggerBehavior EventName="Expanded">
                                    <InvokeCommandAction Command="{Binding LoadPsstCommand}" />
                                </ia:EventTriggerBehavior>
                            </i:Interaction.Behaviors>

                            <Grid ColumnDefinitions="*" RowDefinitions="300 300 auto auto 250 250 auto 120 auto 40"
                                  MinWidth="300" HorizontalAlignment="Stretch">

                                <!-- Front travel -->
                                <plots:TravelHistogramView Grid.Row="0" Grid.Column="0"
                                                           IsVisible="{Binding TelemetryData.Front.Present}"
                                                           IsHitTestVisible="False"
                                                           SuspensionType="Front"
                                                           Telemetry="{Binding TelemetryData}" />

                                <!-- Rear travel -->
                                <plots:TravelHistogramView Grid.Row="1" Grid.Column="0"
                                                           IsVisible="{Binding TelemetryData.Rear.Present}"
                                                           IsHitTestVisible="False"
                                                           SuspensionType="Rear"
                                                           Telemetry="{Binding TelemetryData}" />

                                <!-- Front velocity -->
                                <plots:VelocityView Grid.Row="2" Grid.Column="0"
                                                    IsVisible="{Binding TelemetryData.Front.Present}"
                                                    IsHitTestVisible="False"
                                                    SuspensionType="Front"
                                                    Telemetry="{Binding TelemetryData}" />

                                <!-- Rear velocity -->
                                <plots:VelocityView Grid.Row="3" Grid.Column="0"
                                                    IsVisible="{Binding TelemetryData.Rear.Present}"
                                                    IsHitTestVisible="False"
                                                    SuspensionType="Rear"
                                                    Telemetry="{Binding TelemetryData}" />

                                <!-- Compression balance -->
                                <plots:BalancePlotView Grid.Row="4" Grid.Column="0"
                                                       IsHitTestVisible="False"
                                                       BalanceType="Compression"
                                                       Telemetry="{Binding TelemetryData}">
                                    <plots:BalancePlotView.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <Binding Path="TelemetryData"
                                                     Converter="{x:Static ObjectConverters.IsNotNull}" />
                                            <Binding Path="TelemetryData.Front.Present" />
                                            <Binding Path="TelemetryData.Rear.Present" />
                                        </MultiBinding>
                                    </plots:BalancePlotView.IsVisible>
                                </plots:BalancePlotView>

                                <!-- Rebound balance -->
                                <plots:BalancePlotView Grid.Row="5" Grid.Column="0"
                                                       IsHitTestVisible="False"
                                                       BalanceType="Rebound"
                                                       Telemetry="{Binding TelemetryData}">
                                    <plots:BalancePlotView.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <Binding Path="TelemetryData"
                                                     Converter="{x:Static ObjectConverters.IsNotNull}" />
                                            <Binding Path="TelemetryData.Front.Present" />
                                            <Binding Path="TelemetryData.Rear.Present" />
                                        </MultiBinding>
                                    </plots:BalancePlotView.IsVisible>
                                </plots:BalancePlotView>

                                <!-- Description -->
                                <TextBlock Grid.Row="6" Grid.Column="0"
                                           FontWeight="Black" Foreground="#d0d0d0"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Text="Description" />
                                <TextBox Grid.Row="7" Grid.Column="0"
                                         Margin="2"
                                         HorizontalAlignment="Stretch"
                                         AcceptsReturn="True" TextWrapping="Wrap"
                                         Text="{Binding Description}" />

                                <!-- Error messages for Calibration instance -->
                                <v:ErrorMessagesControl Grid.Row="8" Grid.Column="0"
                                                        Margin="0,5, 0, 0"
                                                        ClearErrorsCommand="{Binding ClearErrorsCommand}"
                                                        ErrorMessages="{Binding ErrorMessages}"
                                                        IsVisible="{Binding ErrorMessages.Count}" />

                                <!-- Save, Reset and Delete buttons -->
                                <Grid Grid.Row="9" Grid.Column="0"
                                      Margin="0,5,0,5"
                                      ColumnDefinitions="* auto auto" RowDefinitions="30">
                                    <Button Grid.Row="0" Grid.Column="0"
                                            Command="{Binding SaveCommand}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            HorizontalContentAlignment="Center"
                                            Content="Save" />
                                    <Button Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch"
                                            Command="{Binding ResetCommand}">
                                        <Image Width="16" Height="16"
                                               Source="{SvgImage /Assets/fa-rotate-left.svg}" />
                                    </Button>
                                    <Button Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch"
                                            Command="{Binding $parent[ItemsControl].((vm:MainViewModel)DataContext).DeleteSessionCommand}"
                                            CommandParameter="{Binding Id}">
                                        <Image Width="16" Height="16"
                                               Source="{SvgImage /Assets/fa-trash-can.svg}" />
                                    </Button>
                                </Grid>
                            </Grid>
                        </Expander>
                    </DataTemplate>
                </ItemsRepeater.ItemTemplate>
            </ItemsRepeater>
        </ScrollViewer>
        
        <!-- Notifications -->
        <v:NotificationsControl Grid.Row="2" Grid.Column="0" Margin="5, 0" ZIndex="10"
                                ClearNotificationsCommand="{Binding ClearNotificationsCommand}"
                                Notifications="{Binding Notifications}"
                                IsVisible="{Binding Notifications.Count}" />
        
        <!-- Error messages -->
        <v:ErrorMessagesControl Grid.Row="3" Grid.Column="0" Margin="5, 0" ZIndex="10"
                                ClearErrorsCommand="{Binding ClearErrorsCommand}"
                                ErrorMessages="{Binding ErrorMessages}"
                                IsVisible="{Binding ErrorMessages.Count}" />

        <Grid Grid.Row="4" Grid.Column="0"
              ColumnDefinitions="* auto" RowDefinitions="40">
            <!-- Upload Sessions -->
            <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                    Margin="5,7,5,3"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Center"
                    Command="{Binding UploadSessionsCommand}">
                <Image Height="22" Source="{SvgImage /Assets/fa-cloud-arrow-up.svg}" />
            </Button>
        </Grid>
        
        <!-- Progress ring --> 
        <Panel Grid.Row="0" Grid.Column="0" Grid.RowSpan="5"
               Background="#0d0d0d" Opacity="0.7"
               IsVisible="{Binding SessionUploadInProgress}">
            <progRing:ProgressRing Width="40" Height="40" Foreground="#0078D7"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   IsActive="{Binding SessionUploadInProgress}" />
        </Panel>
    </Grid>
</UserControl>